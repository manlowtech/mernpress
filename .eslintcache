[{"C:\\Users\\PANASHE\\Desktop\\blogger\\src\\index.js":"1","C:\\Users\\PANASHE\\Desktop\\blogger\\src\\reportWebVitals.js":"2","C:\\Users\\PANASHE\\Desktop\\blogger\\src\\App.js":"3","C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\Dashboard.js":"4","C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\leftSB\\leftSB.js":"5","C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\rightSB\\rightSB.js":"6","C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\rightSB\\RightSB.js":"7","C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\leftSB\\LeftSB.js":"8","C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\NavBar.js":"9","C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\DashComponents\\Posts\\AddPost.js":"10","C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\DashComponents\\Posts\\AllPosts.js":"11","C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\DashComponents\\Posts\\PostsCats.js":"12","C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\DashComponents\\Pages\\AddPage.js":"13","C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\DashComponents\\Pages\\AllPages.js":"14"},{"size":500,"mtime":1611867513372,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":234,"mtime":1612291574920,"results":"18","hashOfConfig":"16"},{"size":2965,"mtime":1612540578479,"results":"19","hashOfConfig":"16"},{"size":1376,"mtime":1612304568413,"results":"20","hashOfConfig":"16"},{"size":1443,"mtime":1612304574140,"results":"21","hashOfConfig":"16"},{"size":1871,"mtime":1612540852433,"results":"22","hashOfConfig":"16"},{"size":1883,"mtime":1612550660775,"results":"23","hashOfConfig":"16"},{"size":337,"mtime":1612301450866,"results":"24","hashOfConfig":"16"},{"size":2357,"mtime":1612521199132,"results":"25","hashOfConfig":"16"},{"size":2009,"mtime":1612529384095,"results":"26","hashOfConfig":"16"},{"size":1498,"mtime":1612399881620,"results":"27","hashOfConfig":"16"},{"size":2368,"mtime":1612540919542,"results":"28","hashOfConfig":"16"},{"size":2009,"mtime":1612542915783,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1stbfzg",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},"C:\\Users\\PANASHE\\Desktop\\blogger\\src\\index.js",[],["62","63"],"C:\\Users\\PANASHE\\Desktop\\blogger\\src\\reportWebVitals.js",[],"C:\\Users\\PANASHE\\Desktop\\blogger\\src\\App.js",[],"C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\Dashboard.js",[],"C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\leftSB\\leftSB.js",[],["64","65"],"C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\rightSB\\rightSB.js",[],"C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\rightSB\\RightSB.js",[],"C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\leftSB\\LeftSB.js",[],"C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\NavBar.js",[],"C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\DashComponents\\Posts\\AddPost.js",[],"C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\DashComponents\\Posts\\AllPosts.js",["66"],"import React, {useEffect,useState} from 'react';\r\nimport axios from 'axios';\r\nimport {Table,TableHead,TableRow,TableBody,TableCell,CircularProgress,Paper,Divider} from '@material-ui/core';\r\n\r\nfunction AllPosts() {\r\n    const [Datas,setDatas] = useState([]);\r\n    //setData(postdata.data);\r\n   \r\nuseEffect(()=>{\r\n    const AllPost = async ()=>{\r\n        const postdata = await axios.get('/posts/allposts').then(res=>\r\n        {\r\n            if(res.data.success){\r\n                console.log(res.data.posts);\r\n                setDatas(res.data.posts);\r\n            }else{\r\n            console.log(\"ERR DATA\");\r\n            }\r\n        });\r\n       \r\n       \r\n    }\r\n    AllPost();\r\n},[]);\r\n\r\nconst PostTable = ()=> Datas.map((post,i)=>(\r\n    <>\r\n    <TableRow key={i}>\r\n        <TableCell>{post.id}</TableCell>\r\n        <TableCell>{post.title}</TableCell>\r\n        <TableCell>{post.post_content}</TableCell>\r\n        <TableCell></TableCell>\r\n        <TableCell></TableCell>\r\n        <TableCell></TableCell>\r\n        <TableCell>{post.author}</TableCell>\r\n        <TableCell>{post.createdAt}</TableCell>\r\n    </TableRow>\r\n    </>\r\n ));\r\n    return (\r\n        <div>\r\n            { console.log(Datas) }\r\n            <Paper>\r\n          <Table>\r\n              <TableHead>\r\n                  <TableRow>\r\n                      <TableCell>ID</TableCell>\r\n                      <TableCell>Title</TableCell>\r\n                      <TableCell>Description</TableCell>\r\n                      <TableCell>Categoy</TableCell>\r\n                      <TableCell>Tags</TableCell>\r\n                      <TableCell>Media</TableCell>\r\n                      <TableCell>Aurthor</TableCell>\r\n                      <TableCell>Date</TableCell>\r\n                  </TableRow>\r\n                  <Divider/>\r\n              </TableHead>\r\n            \r\n              <TableBody>{Datas.length ? <PostTable/> : <CircularProgress/>}</TableBody>\r\n        </Table>  \r\n        </Paper>\r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllPosts;\r\n","C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\DashComponents\\Posts\\PostsCats.js",[],"C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\DashComponents\\Pages\\AddPage.js",[],"C:\\Users\\PANASHE\\Desktop\\blogger\\src\\mernComponents\\backend\\Dashboard\\DashComponents\\Pages\\AllPages.js",["67"],"import React, {useEffect,useState} from 'react';\r\nimport axios from 'axios';\r\nimport {Table,TableHead,TableRow,TableBody,TableCell,CircularProgress,Paper,Divider} from '@material-ui/core';\r\n\r\nfunction AllPages() {\r\n    const [Datas,setDatas] = useState([]);\r\n    //setData(postdata.data);\r\n   \r\nuseEffect(()=>{\r\n    const AllPost = async ()=>{\r\n        const postdata = await axios.get('/posts/allpages').then(res=>\r\n        {\r\n            if(res.data.success){\r\n                console.log(res.data.pages);\r\n                setDatas(res.data.pages);\r\n            }else{\r\n            console.log(\"ERR DATA\");\r\n            }\r\n        });\r\n       \r\n       \r\n    }\r\n    AllPost();\r\n},[]);\r\n\r\nconst PostTable = ()=> Datas.map((post,i)=>(\r\n    <>\r\n    <TableRow key={i}>\r\n        <TableCell>{post.id}</TableCell>\r\n        <TableCell>{post.title}</TableCell>\r\n        <TableCell>{post.post_content}</TableCell>\r\n        <TableCell></TableCell>\r\n        <TableCell></TableCell>\r\n        <TableCell></TableCell>\r\n        <TableCell>{post.author}</TableCell>\r\n        <TableCell>{post.createdAt}</TableCell>\r\n    </TableRow>\r\n    </>\r\n ));\r\n    return (\r\n        <div>\r\n            { console.log(Datas) }\r\n            <Paper>\r\n          <Table>\r\n              <TableHead>\r\n                  <TableRow>\r\n                      <TableCell>ID</TableCell>\r\n                      <TableCell>Title</TableCell>\r\n                      <TableCell>Description</TableCell>\r\n                      <TableCell>Categoy</TableCell>\r\n                      <TableCell>Tags</TableCell>\r\n                      <TableCell>Media</TableCell>\r\n                      <TableCell>Aurthor</TableCell>\r\n                      <TableCell>Date</TableCell>\r\n                  </TableRow>\r\n                  <Divider/>\r\n              </TableHead>\r\n            \r\n              <TableBody>{Datas.length ? <PostTable/> : <CircularProgress/>}</TableBody>\r\n        </Table>  \r\n        </Paper>\r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllPages;\r\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"68","replacedBy":"72"},{"ruleId":"70","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":11,"column":15,"nodeType":"76","messageId":"77","endLine":11,"endColumn":23},{"ruleId":"74","severity":1,"message":"75","line":11,"column":15,"nodeType":"76","messageId":"77","endLine":11,"endColumn":23},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],["78"],["79"],"no-unused-vars","'postdata' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]